// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace BackendProyectoTienda.Models;

public partial class TPVContext : DbContext
{
    public TPVContext()
    {
    }

    public TPVContext(DbContextOptions<TPVContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Articulo> Articulos { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<DetallesFactura> DetallesFacturas { get; set; }

    public virtual DbSet<Empresa> Empresas { get; set; }

    public virtual DbSet<Factura> Facturas { get; set; }

    public virtual DbSet<Familia> Familias { get; set; }

    public virtual DbSet<Subfamilia> Subfamilias { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=ENIO0019PT1122\\SQLEXPRESS;Initial Catalog=TPV;Persist Security Info=True;User ID=saLocal;Password=Logic1!;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Articulo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Articulo__3213E83F5FCB500A");

            entity.HasIndex(e => e.Codigo, "UQ__Articulo__40F9A20691820368").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codigo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Iva)
                .HasColumnType("decimal(4, 2)")
                .HasColumnName("iva");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Precio)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precio");
            entity.Property(e => e.Stock).HasColumnName("stock");
            entity.Property(e => e.SubfamiliaId).HasColumnName("subfamilia_id");

            entity.HasOne(d => d.Subfamilia).WithMany(p => p.Articulos)
                .HasForeignKey(d => d.SubfamiliaId)
                .HasConstraintName("FK__Articulos__subfa__2E1BDC42");
        });

        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Clientes__3213E83F2D6A49FA");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Direccion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.Dni)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("dni");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("telefono");
        });

        modelBuilder.Entity<DetallesFactura>(entity =>
        {
            entity.HasKey(e => new { e.Ejercicio, e.Serie, e.NumeroPedido, e.Orden }).HasName("PK__Detalles__3FA3D57D123FE284");

            entity.ToTable("DetallesFactura");

            entity.Property(e => e.Ejercicio).HasColumnName("ejercicio");
            entity.Property(e => e.Serie)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("serie");
            entity.Property(e => e.NumeroPedido).HasColumnName("numeroPedido");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.ArticuloId).HasColumnName("articulo_id");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Iva)
                .HasColumnType("decimal(4, 2)")
                .HasColumnName("iva");
            entity.Property(e => e.PrecioUnitario)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precio_unitario");
            entity.Property(e => e.Uuid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("uuid");

            entity.HasOne(d => d.Articulo).WithMany(p => p.DetallesFacturas)
                .HasForeignKey(d => d.ArticuloId)
                .HasConstraintName("FK__DetallesF__artic__36B12243");

            entity.HasOne(d => d.Factura).WithMany(p => p.DetallesFacturas)
                .HasForeignKey(d => new { d.Ejercicio, d.Serie, d.NumeroPedido })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DetallesFactura__37A5467C");
        });

        modelBuilder.Entity<Empresa>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Empresas__3213E83F8482BA8F");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Direccion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Nif)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("nif");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("telefono");
        });

        modelBuilder.Entity<Factura>(entity =>
        {
            entity.HasKey(e => new { e.Ejercicio, e.Serie, e.NumeroPedido }).HasName("PK__Facturas__EC81C0F3C9A5FE55");

            entity.Property(e => e.Ejercicio).HasColumnName("ejercicio");
            entity.Property(e => e.Serie)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("serie");
            entity.Property(e => e.NumeroPedido).HasColumnName("numeroPedido");
            entity.Property(e => e.ClienteId).HasColumnName("cliente_id");
            entity.Property(e => e.EmpresaId).HasColumnName("empresa_id");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("total");
            entity.Property(e => e.Uuid)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("uuid");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.ClienteId)
                .HasConstraintName("FK__Facturas__client__31EC6D26");

            entity.HasOne(d => d.Empresa).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.EmpresaId)
                .HasConstraintName("FK__Facturas__empres__32E0915F");
        });

        modelBuilder.Entity<Familia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Familias__3213E83FDB91D18C");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Subfamilia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Subfamil__3213E83FACEE030F");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.FamiliaId).HasColumnName("familia_id");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.Familia).WithMany(p => p.Subfamilia)
                .HasForeignKey(d => d.FamiliaId)
                .HasConstraintName("FK__Subfamili__famil__2A4B4B5E");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}